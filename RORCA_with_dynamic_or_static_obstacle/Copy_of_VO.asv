clc;clear;close all
robot_radius=1.5;                  % Agent半径2m

% obs_positions=[10,0];            % 动态障碍起始坐标                 [x,y,r] -0.3, 2.5, 0.3;   1.5, 2.5, 0.3;    3.3, 2.5, 0.3; 5.1, 2.5, 0.3
% obs_positions=[30,40];         % 静态障碍坐标
obs_positions=[30,40;
               40,20];         % 动态随机障碍坐标
obs_radius = 1.9;           % 圆形obstacle半径1.m
V_obs_max = 1.4;

theta_obs1=rand(1,1)*6.14;         % 障碍物的运动方向
theta_obs2=rand(1,1)*3.14;
% theta_obs3=rand(1,1)*6.14;
obs_velocity = [V_obs_max*cos(theta_obs1),V_obs_max*sin(theta_obs1);
                V_obs_max*cos(theta_obs2),V_obs_max*sin(theta_obs2)
                ]; % 动态障碍速度
% obs_velocity =[0,0];          %  静态障碍速度

num=0;
for theta = 0:0.2*pi:2*pi-0.0001
    num=num+1;
    robot_positions(num,:) = [30*cos(theta),30*sin(theta)]+[30,30];
end
num=0;
for theta = -pi:0.2*pi:pi-0.0001
    num=num+1;
    goal(num,:) = [30*cos(theta),30*sin(theta)]+[30,30];
end

V_current= 0.01*zeros(size(robot_positions,1),2);        % Agent初始速度向量为0
V_max=     2*ones(size(robot_positions,1),1);         % Agent最大速度大小为3
step = 0.8;                                        % 时间间隔  可以稍微大一点！！！
color = colormap(jet(size(robot_positions,1)));         % 画图颜色
tau = 2;
%*********************仿真开始**************************%
t = 0;                                              % 起始时刻

% % aviobj=VideoWriter('RORCA.avi');
% % open(aviobj);

while true
    theta_obs1=rand(1,1)*6.14;         % 障碍物的运动方向
    theta_obs2=rand(1,1)*6.14;
%     theta_obs3=rand(1,1)*6.14;
    obs_velocity = [V_obs_max*cos(theta_obs1),V_obs_max*sin(theta_obs1);
                    V_obs_max*cos(theta_obs2),V_obs_max*sin(theta_obs2)]; % 动态障碍速度
    
    V_pref    = compute_V_pref(robot_positions, goal, V_max);     % Vpref中存放所有Agent的首选速度（向量）
    V_current = RORCA_update(robot_positions, V_pref, V_current, robot_radius,obs_positions,obs_velocity,obs_radius);
    t=t+1; 
    
    if V_current == zeros(size(V_current))
        break;              % 判断到达目标
    end
    for i=1:size(robot_positions,1)
        robot_positions(i,:) = robot_positions(i,:)+ V_current(i,:)*step;
        eval(['rob_pos_',num2str(i) ,'(',num2str(t),',:) = robot_positions(',num2str(i),',:);']);   % 定义并存放各个robot的位置坐标
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%动态障碍
    for i=1:size(obs_positions,1)
        obs_positions(i,:) = obs_positions(i,:)+ obs_velocity(i,:)*step;
        if t>130
            obs_velocity(i,:)=[0,0];
        end
        eval(['obs_pos_',num2str(i) ,'(',num2str(t),',:) = obs_positions(',num2str(i),',:);']);   % 定义并存放各个obstacle的位置坐标
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    % ********************显示当前路径*************%
    for i=1:size(robot_positions,1)
        p=plot(goal(i,1),goal(i,2),'v','color',color(i,:)); % 显示目标点
        hold on;            % hold on在最开始画图就应使用
        grid on;
    end
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for i=1:size(obs_positions,1)
        p=plot(obs_positions(i,1),obs_positions(i,2),'h','color',color(i,:));           % 显示当前各个障碍物坐标（圆圈）
        axis([-10,70,-10,70]);
        quiver(obs_positions(i,1),obs_positions(i,2),obs_velocity(i,1),obs_velocity(i,2),'MaxHeadSize',2.5,'AutoScaleFactor',5.00,'AutoScale','off');
        %%%%%%%%%%%  画历史轨迹样式： p=plot(rob_pos_i(:,1),rob_pos_i(:,2),'-','color',color(i,:));    %%%%%%%%
        p=eval(['plot(obs_pos_',num2str(i),'(:,1),obs_pos_',num2str(i),'(:,2),''-k'');']);  %黑色
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    for i=1:size(robot_positions,1)
        p=plot(robot_positions(i,1),robot_positions(i,2),'h','color',color(i,:));           % 显示当前各个robot坐标（圆圈）
        axis([-10,70,-10,70]);
        quiver(robot_positions(i,1),robot_positions(i,2),V_current(i,1),V_current(i,2),'MaxHeadSize',2.5,'AutoScaleFactor',5.00,'AutoScale','off');
        %%%%%%%%%%%  画历史轨迹样式： p=plot(rob_pos_i(:,1),rob_pos_i(:,2),'-','color',color(i,:));    %%%%%%%%
        p=eval(['plot(rob_pos_',num2str(i),'(:,1),rob_pos_',num2str(i),'(:,2),''-'',''color'',color( ',num2str(i),',:));']);
    end        
    pause(0.05);
    hold off; 
    
% %     currFrame = getframe;
% %     writeVideo(aviobj,currFrame);       
end

% % close(aviobj);

% 显示最后一个输出结果
for i=1:size(robot_positions,1)
    p=plot(goal(i,1),goal(i,2),'v','color',color(i,:)); % 显示目标点
    axis([-10,70,-10,70]);
    hold on;
    grid on;
    p=plot(robot_positions(i,1),robot_positions(i,2),'h','color',color(i,:)); % 显示当前各个robot坐标    
    p=eval(['plot(rob_pos_',num2str(i),'(:,1),rob_pos_',num2str(i),'(:,2),''-'',''color'',color( ',num2str(i),',:));']);    % 历史曲线 
    
%     p=eval(['plot(obs_pos_',num2str(i),'(:,1),obs_pos_',num2str(i),'(:,2),''-k'');']);
end
